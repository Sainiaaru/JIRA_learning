--> Jira INTRODUCTION :It is a software taht assist , tracking, reporting of project , developed by atlassian , initially started as software devlopement tool to support agile , mostly for software development teams, last few yrs adopted by all industries. it can be categorized into 3 category  as jira software ( software development and agile teams), jira service desk (IT serviec desk like helpdesk in which users raise service request and have SLA etc) , jira core (business units , highly customizable as screens and can modify roles and responsibilities of persons, if working in any HR or marketing then JIRA core will be used).

--> Issues in JIRA: issue is any task want to achieve , in order to complete a particular project . In JIRA issue is a task that team complete in order to deliver the project. Default issue types (supported would be bug, story bug task etc), JIRA core( have different task ).
if we click on all issues and after that click on create then in type option can see option such as epic, initiative, bug, story, task and if use JIRA CORE then it only show as task or sub task options.can also create sub task when choose epic, story, bug , if u use JIRA service desk then u can only select service request, incident, change management, problem management option in a issue option. custom/default  issue type created by JIRA admin .

--> how to customize view of certain issues in JIRA or add / remove columns of serach results in issues : if I click on JQL from basic (in basic there is no quesry all dashboard but in JQL u can write quesy like- type = Bug AND project = FP AND assignee = currentUser() ORDER BY created DESC) 

--> JIRA homepage-first page in when u login into JIRA, various options shown on homepage is :
1) first option available is Dashboards: its hows two options further as view all dashboard or to create it.copy dashboard or can share dashboard by clciking on three dots after choosing dashboard option.
2) Projects : in which can see all the projects made list and also option to create that project.
3) Filters : there are 2options view all issues, and view all filters.
4) Boards: in view all borads and recent boards options, bu clciking on any board it show the progress.
5) one additional plugin is tehre if download Zephyr test managementand execution plugin into JIRA software , test tab allows to manage eg , execution cycle, creating test cases, checking tracebeility etc.
6) create button : is used to create any issue type in project and then issue type selecting , summary fields hav provided and then clcik on create .
7)search bar : this is used to search issue fast.
8) settings tab :in which altlassian admin can add users and manage their roles.
9) In profile section can change password, name , language and preferences.


--> JIRA Gadgets : they displays summaries of JIRA project and issue data on JIRA Dashboard, so as when new dashboard rather than default dashboard is created then after creating new dashboard , option of adding gadgets appear in which can choose like bubble chart etc and can link with the project details and that gadjet will show summaries details of JIRA project .

--> JIRA Atlassian Marketplace : how can manage addons in JIRA software - to discover atlassian marketplace click on jira settings options and in taht choose APPS clcik on aaps and then on search bar can find all the external tools instance which can be downloaded in JIRA , for eg I installed Zephyr instance and after installation can look into manage apps and if wanted to uninstall then can disable or totally uninstall it by clciking on magae apps only.

--> JIRA projects: 1)jira prject is a collection of issues , single place to manage ur work. 
2) every project in JIRA has workflow .
3) teams use project to manage software delivery .
4) 3 jira applications are jira software, jira helpdesk, jira core and like development of new soft. applications, hr-employee onboarding or finance use jira core , jira service desk -it help desk like service request.
5) in jira we use , users -team members, issues-task/ bug story, workflow-process for each task, version / realease- specific to development efforts and released to production, components- like database /ui , data for reporting on prject status,  


--> KANBAN software - it si a framework for agile development methodology and JIRA supports 2 types of framework one is scrum ad KANBAN , it is much more suited when there is contionous flow of work , instead of time box iterations like scrum methodology like scrum , gives flexilibility like of continous delivery , advantage is change can happen anytime , so reprioritization or change of issues can happen anytime in KANBAN,it is most suited when there is no rigid timeline .

--> diff b/w scrum and KANBAN :
Kanban and Scrum are both project management frameworks, but they differ in how they manage work and how they approach decision making: 
1) Workflow
Kanban uses a continuous workflow, while Scrum uses structured sprints. 
2) Task management
Kanban breaks down tasks into smaller chunks, while Scrum focuses on specific tasks during sprints. 
3) Decision making
Kanban uses a simple process of defining goals, mapping processes, creating cards, and setting limits. Scrum uses collaborative, team-based approaches, with key decisions made during meetings. 
4) Prioritization
Scrum prioritizes work by sorting and grooming the product backlog, setting priorities, and estimating resources. Kanban uses probabilistic forecasting instead of a prioritization or estimation scheme. 
5) Best use
Kanban is better for smaller projects or ongoing projects with small pieces of work, while Scrum is better for complex projects that need to be split into smaller chunks. 
6) Kanban can be used to supplement Scrum, or you can use a mixture of the two approaches called Scrumban.


--> jira project creation -in project creation , there is one option to import data into jira- only jira administrator can create new project . 

--> how to edit/delete project in JIRA- only accessible to jira administrator -click on the settings button on dashboard and then clcik on th eproject you want to delete or modify , if want to modify details then clcik on threee dots and go into project settings and can modify the name and clcik save, if want to delete then clcik on three dots and clcik on move to trash , it ask for password and after that it will be deleted.


--> Epic in JIra : its is an issue of type epic in jira with which other issues like user stories, bugs, tasks can be linked , only available in jira software not in other, it contain large work so it can also considered as large user story or requirement which is further broken down into  user stories, and us are the requirements which can be delivered in sprint , so any requirement deliver within sprint is user story or anything which is bigger than us or take multiple sprints is known as epic , to create epic click on create option and then choose project name and issue type as epic and at last click on create , based on the delivery of us we can track the completion of epic .
when one epic is created then according to the points mentioned in description will make all different us for each point. in label part we can paste any image or any logo in label , in adding we can attach a child issue means any us , bug ., can add the start date and end date of any duration like i add for 3 months time period. there are soo many options available in epic to serach like status category of to do , in progress and done .


--> Story in JIRA - story is a small term requirement , or short term goal, in which we complete before the sprint completion, story is always less than epic. story is epic's child .
to create a story clcik on backlog and in that create an issue choose story , while  creating story have to wwrite all the names , description and then comes story point estimate which is very imp , in which some people made it in hour basis or day basis or half day basis for eg in my story point estimate i take 12 hours time period, can also attach some documents. after story made can see it in backlog. there is no compulsory to add story with epic but 95%time we add it . 
we can add epic with story by clciking on edit option present on top of story. can also create child issue with story so that until child issue or sub task does not complete story can't be completed.can also move from story to epic or vice-versa that is if by mistake we make story and need to made epic then we can make it in move it by clciking on move option 

the main difference b/w task and story is that on story more than one people can work but in task only one people will work.


--> sprint in JIRA: when in small time frame we try to develop features of project , it is always less than 1 yr , we divide project into small small parts,  when creting sprint go into backlog and click on creat esprint option then , can add any story /bug/issue in sprint, can make multiple sprints also , to edit or cange date of sprint use custom option/ duration such as 1 /2/3/4 weeks , until and unless sprint 1 is over if we already made sprint 2 , it won't reflect in board only sprint 1 task such as story, bug will be shown in to do / in progress/ done column . when we complete first sprint then only sprint 2 will be visible in board and remaining task of sprint 1 will be automatically  shifted in sprint 2 .

--> Bug issues in JIRA: means that after development whenever there is any bug found by tester then he marks that bug in JIRA and developer will fix it and again from JIRA tester will test it . , bug can be registered by anyone like manager, client, product owner but mostly testing team will raise bug in JIRA .
can create bug issue by clciking on create button and choosing bug option which is red dot in color and writing description of that bug , in bug can be linked with any issue , in that linked issues option there are multiple options such as is_blocked_by/ is_cloned_by/ is_duplicated/relates_to and many more .


--> TASK in JIRA: a unit of work that is assigned to a story and is a small, independent piece of work that needs to be completed.
In task it is notnecessary that every time we acheive something but in story there is a goal to achieve something , in task is made to estimate the requirements and time and task is always suggested to make for one day ormax to max for two days not greater than that.story can be of 4 -5 days but not task.

--> Serach in JIRA: there are four types of search in JIRA : in interview if asked how many types u can serach in JIRA so there are only two types such as basic issue and advance issue serach but overall there are 4 types of serach :
1) board search- this search comes under sprint , so in board can be searched through type such as bug/task/story or through search bar.
2)global search- it is type of search which search everything if there are two or more projects, then it search from whole / globaly.
3) basic issue search-when we click on filter option and view all issues then at right corner we find basic and JQL when we select basic search then it gives so many options to choose from it and after filtering options it gives you serach.
4) advanced search- JQL (JIRA Query language) :when we click on view all issues then cn switch to JQL from basic and can write quesry in the search bar .queries such as [type=Story AND (status="Done" or status="In Progress")], type !=Story, type !=Story or type=Bug or type=Epic or type !=Task


-->add new issue type / custom issue type in JIRA: there are 5 types of issues in JIRA - story, bug, task, epic, sub-task, and custome issue type is another issue type which person made it own, if want to chcek about issue types present then go into projcet settings and click on issue type , can find all options of issue type and have an option to create new issue type and enter details . and after can also see new issue type in board and can do all the functions which can be done in bug/ story/ task same as in custom issue . we will never iclude sub-task in category , in category only task, story,bug , epic and custom issue will be made.


--> Labels in JIRA: they are simply tags in which we can attach with any issue in jira, labels used when want to find any particular thing like if we made issue of frontend and backend then by applying label , its easy to find about front and back end. can attach label with new issue by clciking on create issue and adding labels into it.


--> Connect GIT with JIRA: to connect GIT with JIRA , we have to click on code and then two options of bitbucket connect and other options of github connect is present , click on github account connect then follow the steps on JIRA and installed GIT hub instance on JIRA nad then further connect it.,after connecting with GIT can create branch also with GIT and JIRA.

--> how to create dashboard in JIRA:is a collection of “gadgets”, or pre-installed data displays, that show various types of real-time information to help you track and monitor your work across projects.when we click on dashboard in JIRA , then we saw first dashboard that is default dashboard , to create it clcik on create dashboard option at top right corner , fill the name , description, , then viewers and editors details 

--> customize issue template: when we  want tosee that in bug / story what fileds are required to show , so then we can customize it on our own , by first clciking on the project settings and click on issue types then window appears where context fields are shown , if you don't want any field eg. in bug don't want label field then choose label field from window and drag that field to the right corner where pop up appears to delete it and label gets deleted , so after that when u create bug issue that that label field won't be appear in creating issue. 
note: when u customize any field for particular issue type eg bug or story then it changes will only show for that particular issue not for every issue ttype eg if u made changes in bug type then it won't be visible while selecting story issue types.
if want to add field again then from the rightcorner only search bar choose that field and drag that field towards left , the field gets added again. summary and description are mandatory fields , it can't get removed.
if want to add ur own fields and customize it then can add also choosing any fields from righ corner "create a field" box given .

--> issue workflow: A Jira workflow represents the process your team uses to take an issue from creation to completion. in board there are mainly to do, in progress, and done flow presesnt but can also add more flows from it by cciking on plus icon of create column and name the flow name as testing or close . to delete added workflow clcik on three dots and clcik on delete flow then present task/story will goes back to the previous stage.this is the basic proceduer but if wnat to do advance process is clcik on project settings and then clcik on issue types and clcik on edit workflow. can add workflow by clicking on done status and then giving name of it eg testing and can also apply rule that until issue comes in done then after it comes in testing stage not before that and clcik on update workflow.

--> project features in jira :  when we open jira then on left hand side some options comes as board , backlog, add view, code, tieline , we can some more features , clcik on prject settings , click on features and can enable and disable fetaures used in jira and all features can be seen at left side of dashboard.

--> issue activity and activity stream : in issue activity shows every user changes and in activity stream it shows overall all the changes . when we open story then at bottom can see then in activity can see commets, history and work log , in comments if any developer does not understand requirements then can comment and in history all past things can seen. and if want to see all the activities related to project then can go at activity stream - create dashboard , at right corner some gadgets are there choose activity stream gadget and add it , after adding can see all the things that done by every team member not ony one team member in whole project.


--> reports and charts in jira: all of the process like which is to be done, in progress and all shown through charts.to enable reports go to project settings  and clcik on fetaures and enable reports in it to see reports present on the left side of dashboard

-->Sprint burndown chart: this chart tells only about sprint , it inlcudes efforts of the main task or story , it does not include efforts of sub task. WHEN WE CHOOSE SPRINT BURN DOWN CHART THEN OPTIONS AVAILABLE TO SLEECT FOR WHICH SPRINT HAVE TO CHOOSE AND RELATED TO THAT PARTICULAR SPRINT IT WILL SHOW US CHART AND in that chart shows remaining work, guidelines, story points and whole sprint summary also.
the sprint burndown chart as name specifies tells that every time the work had to be decresed the chart goes down , when in starting of sprint all of the story points declared at starting and as per perfect burndown chart the red line which is remaining work goes and meet at 0 when all the work done and sprint gets over and the gray line (guideline) it will also move with the red line only .
note imp: can burndown chart goes into negative : answer is yes if the effort marked earlier before work is less and we did more effort in work then graph goes in negative. (jb story start ki , uske bad me uske story point estimation me change skiye tb vo minus me jata h).


-->sprint burnup chart : through this we can estimate that what work to do and how much work is done , this chart tells only about sprint , it includes efforts of main taks or story , it does not include efforts of sub-tasks, 

--> cumulative flow diagram : A cumulative flow diagram shows the various statuses of work items for an application, version, or sprint. we can access this flow diagram by clicking on report then in report clcik on cumulative flow diagram , can choode dates also and can check for particular sttaus as well like to do, in progress, done or any custom fields. 


--> Velocity report : velocity report tells all the work comppleted by team , can access by clciking on report and then clcik on velocity report , The velocity chart displays the average amount of work a scrum team completes during a sprint.difference b/w velocity and cumulative chart is in cumulative we can see through dates not through sprint . in velocity can see through sprint and if commitment is less eg commitment is 20 and completed is 30 so can say that team had great capability but estimation does not go weell so the perfect way of velocity chart is that commitment and work completed must be same only or little bit diference.
to see team's performance veocity chart is better than cumulative.

-->cycle time report and deployment frequency report: Understand your project's Cycle Time to see how quickly you ship value. Your cycle time is the time it takes an issue to go from first commit to last production deployment based on development and CI/CD data. , through this can see how our team is performing good , better, cycle time graph is used eg when one bug comes so jira thought that after solving bug it will be deployed on production , but if we deployed that bug solution after 2 weeks then that time noted in cycle time graph.
in ccyle time report , image attached tells us that small dots are issues, and green , yellow an dpink line tells us that some issues gets solved in 50% , some take 85% and some 95% above , and on y axis the time shows tells that when this issue comes and how many days it took to solved and deployed on production. 

--> deployment frequency chart : tells in how much time deployment activity takes place eg today we code and deployed tomorrow or after 4 days , tells that in one week how many depployment happens.


BYEEEEEE!  PLEASE SEE ATTACHED JIRA PICTURES PPTTTTTTTT.
BYEEEEE JIRA COURSE OVER NOW!!!!



